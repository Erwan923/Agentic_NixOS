{ pkgs, config, inputs, lib,
  videoDriver,
  hostname,
  browser,
  editor,
  terminal,
  terminalFileManager,
  ...
}: {
  imports = [
    ./hardware-configuration.nix
    ../../modules/hardware/video/${videoDriver}.nix
    ../../modules/hardware/drives

    ../common.nix
    ../../modules/scripts

    # WM/DE
    ../../modules/desktop/hyprland

    # Apps & CLI
    ../../modules/programs/games
    ../../modules/programs/browser/${browser}
    ../../modules/programs/terminal/${terminal}
    ../../modules/programs/editor/${editor}
    ../../modules/programs/cli/${terminalFileManager}
    ../../modules/programs/cli/starship
    ../../modules/programs/cli/tmux
    ../../modules/programs/cli/direnv
    ../../modules/programs/cli/lazygit
    ../../modules/programs/cli/cava
    ../../modules/programs/cli/btop
    ../../modules/programs/shell/bash
    ../../modules/programs/shell/zsh
    ../../modules/programs/media/discord
    ../../modules/programs/media/spicetify
    ../../modules/programs/media/mpv
    ../../modules/programs/misc/tlp
    ../../modules/programs/misc/thunar
    ../../modules/programs/misc/lact
  ];

  # Home-Manager : paquets sans Hydenix
  home-manager.sharedModules = [
    # Temporarily disable nix-index-database to debug
    # inputs.nix-index-database.hmModules.nix-index
    (_: {
      # Résolution du conflit de stateVersion
      home.stateVersion = lib.mkForce "25.05";
      
      home.packages = with pkgs; [
        github-desktop
        obsidian
        telegram-desktop
        bitwarden
        swww  # Add swww package for wallpaper management
      ];
      
      # Configuration SWWW et wallpaper
      wayland.windowManager.hyprland.settings = {
        exec-once = [
          "swww-daemon"
          "swww img ~/nixos-config/modules/themes/wallpapers/Agentic_NIXOS.png"
        ];
      };
    })
  ];

  # Paquets système
  environment.systemPackages = with pkgs; [
    nix-index
    comma
    ansible
    terraform
    k3d
    kubectl
    k9s
    helm
    git
    docker
  ];

  # Docker (service + groupe)
  virtualisation.docker.enable = true;
  # Ajoute l'utilisateur au groupe docker sans toucher à users.users.r3v4n.extraGroups
  users.groups.docker.members = [ "r3v4n" ];
  
  # Hostname (vient des settings du flake)
  networking.hostName = hostname;

  # Service DLNA
  services.minidlna = {
    enable = true;
    openFirewall = true;
    settings = {
      friendly_name = "NixOS-DLNA";
      media_dir = [
        "/mnt/work/Pimsleur"
        "/mnt/work/Media/Films"
        "/mnt/work/Media/Series"
        "/mnt/work/Media/Videos"
        "/mnt/work/Media/Music"
      ];
      inotify = "yes";
      log_level = "error";
    };
  };
  
  users.users.minidlna = {
    extraGroups = [ "users" ];
  };
}